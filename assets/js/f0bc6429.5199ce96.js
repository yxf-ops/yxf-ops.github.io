"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[7417],{8860:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>g});var a=t(7953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(t),f=r,g=u["".concat(s,".").concat(f)]||u[f]||p[f]||o;return t?a.createElement(g,i(i({ref:n},c),{},{components:t})):a.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6663:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=t(5890),r=(t(7953),t(8860));const o={title:"FoundationDB Installation",tags:["Docs"]},i=void 0,l={unversionedId:"deployment/foundationdb-installation",id:"version-0.2.0/deployment/foundationdb-installation",title:"FoundationDB Installation",description:"In this guideline, I will set up a Foundation DB cluster on 3 physical machines. They are all using debian OS. I refer to two official guidelines here Getting Started on Linux and Building a Cluster.",source:"@site/versioned_docs/version-0.2.0/deployment/05-foundationdb-installation.mdx",sourceDirName:"deployment",slug:"/deployment/foundationdb-installation",permalink:"/docs/0.2.0/deployment/foundationdb-installation",draft:!1,editUrl:"https://github.com/yxf-ops/yxf-ops.github.io/tree/main/versioned_docs/version-0.2.0/deployment/05-foundationdb-installation.mdx",tags:[{label:"Docs",permalink:"/docs/0.2.0/tags/docs"}],version:"0.2.0",sidebarPosition:5,frontMatter:{title:"FoundationDB Installation",tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"Deploy ByConity to physical servers with a docker wrapper",permalink:"/docs/0.2.0/deployment/docker-wrapper"},next:{title:"HDFS Installation",permalink:"/docs/0.2.0/deployment/hdfs-installation"}},s={},d=[],c={toc:d},u="wrapper";function p(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"In this guideline, I will set up a Foundation DB cluster on 3 physical machines. They are all using debian OS. I refer to two official guidelines here ",(0,r.yg)("a",{parentName:"p",href:"https://apple.github.io/foundationdb/getting-started-linux.html"},"Getting Started on Linux")," and ",(0,r.yg)("a",{parentName:"p",href:"https://apple.github.io/foundationdb/building-cluster.html"},"Building a Cluster"),"."),(0,r.yg)("p",null,"Firstly, we need to download the binary for the installation in ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apple/foundationdb/releases/"},"here"),". We need to download the ",(0,r.yg)("strong",{parentName:"p"},"server"),", ",(0,r.yg)("strong",{parentName:"p"},"monitor")," and ",(0,r.yg)("strong",{parentName:"p"},"cli")," binaries, and those corresponding ",(0,r.yg)("strong",{parentName:"p"},"sha256")," checksum files. I will choose version ",(0,r.yg)("strong",{parentName:"p"},"7.1.25")," as it is the latest at the time.\\\nIn your directory, let's create a folder ",(0,r.yg)("inlineCode",{parentName:"p"},"foundationdb"),".\\\nThen, create a subfolder ",(0,r.yg)("inlineCode",{parentName:"p"},"bin")," inside ",(0,r.yg)("inlineCode",{parentName:"p"},"foundationdb"),". \\\nIn this ",(0,r.yg)("inlineCode",{parentName:"p"},"foundationdb/bin")," folder, download with the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"curl -L -o fdbserver.x86_64 https://github.com/apple/foundationdb/releases/download/7.1.25/fdbserver.x86_64\ncurl -L -o fdbserver.x86_64.sha256 https://github.com/apple/foundationdb/releases/download/7.1.25/fdbserver.x86_64.sha256\n\ncurl -L -o fdbmonitor.x86_64 https://github.com/apple/foundationdb/releases/download/7.1.25/fdbmonitor.x86_64\ncurl -L -o fdbmonitor.x86_64.sha256 https://github.com/apple/foundationdb/releases/download/7.1.25/fdbmonitor.x86_64.sha256\n\ncurl -L -o fdbcli.x86_64 https://github.com/apple/foundationdb/releases/download/7.1.25/fdbcli.x86_64\ncurl -L -o fdbcli.x86_64.sha256 https://github.com/apple/foundationdb/releases/download/7.1.25/fdbcli.x86_64.sha256\n")),(0,r.yg)("p",null,"After the download is completed, let's do the checksum check on the executable files to see if the downloads are good. The two checksums should be equal. For example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ sha256sum --binary fdbserver.x86_64\n73b70a75464e64fd0a01a7536e110e31c3e6ce793d425aecfc40f0be9f0652b7 *fdbserver.x86_64\n\n$ cat fdbserver.x86_64.sha256\n73b70a75464e64fd0a01a7536e110e31c3e6ce793d425aecfc40f0be9f0652b7  fdbserver.x86_64\n")),(0,r.yg)("p",null,"Next we will delete those sha256 checksum file because we don't need them anymore, we'll also rename the executable file to remove the trailing ",(0,r.yg)("inlineCode",{parentName:"p"},"x86_64")," and give them executable permission."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"rm *.sha256\nmv fdbcli.x86_64 fdbcli\nmv fdbmonitor.x86_64 fdbmonitor\nmv fdbserver.x86_64 fdbserver\nchmod ug+x fdbcli fdbmonitor fdbserver\n")),(0,r.yg)("p",null,"Next we will create some folder to store the config, data and log:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"mkdir -p /<your_directory>/fdb_runtime/config\nmkdir -p /<your_directory>/fdb_runtime/data\nmkdir -p /<your_directory>/fdb_runtime/logs\n")),(0,r.yg)("p",null,"Then we create the ",(0,r.yg)("inlineCode",{parentName:"p"},"foundationdb.conf")," config file in ",(0,r.yg)("inlineCode",{parentName:"p"},"/<your_directory>/fdb_runtime/config/")," with content like this"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ cat /<your_directory>/fdb_runtime/config/foundationdb.conf\n[fdbmonitor]\nuser = root\n\n[general]\ncluster-file = /<your_directory>/fdb_runtime/config/fdb.cluster\nrestart-delay = 60\n\n[fdbserver]\n\ncommand = /<your_directory>/foundationdb/bin/fdbserver\ndatadir = /<your_directory>/fdb_runtime/data/$ID\nlogdir = /<your_directory>/fdb_runtime/logs/\npublic-address = auto:$ID\nlisten-address = public\n\n\n[fdbserver.4500]\nclass=stateless\n[fdbserver.4501]\nclass=transaction\n[fdbserver.4502]\nclass=storage\n[fdbserver.4503]\nclass=stateless\n")),(0,r.yg)("p",null,"Then in the same directory create file ",(0,r.yg)("inlineCode",{parentName:"p"},"fdb.cluster")," with content like this, change the ip to the ip of your machine"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ cat /<your_directory>/fdb_runtime/config/fdb.cluster\nclusterdsc:test@<your_ip_address>:4500\n")),(0,r.yg)("p",null,"We will install FDB as a ",(0,r.yg)("inlineCode",{parentName:"p"},"systemd")," service. So, in the same folder we will create file ",(0,r.yg)("inlineCode",{parentName:"p"},"fdb.service")," with content like this"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ cat /<your_directory>/fdb_runtime/config/fdb.service\n[Unit]\nDescription=FoundationDB (KV storage for cnch metastore)\n\n[Service]\nRestart=always\nRestartSec=30\nTimeoutStopSec=600\nExecStart=/<your_directory>/foundationdb/bin/fdbmonitor --conffile /<your_directory>/fdb_runtime/config/foundationdb.conf --lockfile /<your_directory>/fdb_runtime/fdbmonitor.pid\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.yg)("p",null,"We have finished preparing the config file. Now let's install fdb into ",(0,r.yg)("inlineCode",{parentName:"p"},"systemd")),(0,r.yg)("p",null,"Copy the service file into ",(0,r.yg)("inlineCode",{parentName:"p"},"/etc/systemd/system/")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"cp fdb.service /etc/systemd/system/\n")),(0,r.yg)("p",null,"Reload the service files to include the new service"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"systemctl daemon-reload\n")),(0,r.yg)("p",null,"Enable and start the service"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"systemctl enable fdb.service\nsystemctl start fdb.service\n")),(0,r.yg)("p",null,"Check the service and see that it is active"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ systemctl status fdb.service\n\u25cf fdb.service - FoundationDB (KV storage for cnch metastore)\n   Loaded: loaded (/etc/systemd/system/fdb.service; disabled; vendor preset: enabled)\n   Active: active (running) since Tue 2023-01-17 18:35:42 CST; 20s ago\n\n")),(0,r.yg)("p",null,"Now I have install fdb service in 1 machine, I will repeat the same for the other 2 machines"),(0,r.yg)("p",null,"After it's installed on all 3 machines, we need to connect them to form a cluster. Now go back to the first node, connect to FDB using fdbcli"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ ./foundationdb/bin/fdbcli -C fdb_runtime/config/fdb.cluster\nUsing cluster file `fdb_runtime/config/fdb.cluster'.\n\nThe database is unavailable; type `status' for more information.\n\nWelcome to the fdbcli. For help, type `help'.\nfdb>\n")),(0,r.yg)("p",null,"execute this to init a database"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"configure new single ssd\n")),(0,r.yg)("p",null,"Next, set all three nodes as coordinators, replace the address with your machine address"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"coordinators <node_1_ip_address>:4500 <node_2_ip_address>:4500 <node_3_ip_address>:4500\n")),(0,r.yg)("p",null,"Then exit the cli, you will found that the ",(0,r.yg)("inlineCode",{parentName:"p"},"fdb.cluster")," now have a new content"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ cat fdb_runtime/config/fdb.cluster\n# DO NOT EDIT!\n# This file is auto-generated, it is not to be edited by hand\nclusterdsc:wwxVEcyLvSiO3BGKxjIw7Sg5d1UTX5ad@example1.host.com:4500,example2.host.com:4500,example3.host.com:4500\n")),(0,r.yg)("p",null,"Copy this file to other 2 machines and replace the old file then restart fdb service"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"systemctl restart fdb.service\n")),(0,r.yg)("p",null,"Then come back to the first machine, connect to FDB using fdbcli again and execute this command to change ",(0,r.yg)("a",{parentName:"p",href:"https://apple.github.io/foundationdb/configuration.html#choosing-a-redundancy-mode"},"redundant mode")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"double")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"configure double\n")),(0,r.yg)("p",null,"Then execute the ",(0,r.yg)("inlineCode",{parentName:"p"},"status")," command with ",(0,r.yg)("inlineCode",{parentName:"p"},"fdbcli")," to see the result, you should see something like this"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"fdb> status\n\nUsing cluster file `fdb_runtime/config/fdb.cluster'.\n\nConfiguration:\n  Redundancy mode        - double\n  Storage engine         - ssd-2\n  Coordinators           - 3\n  Usable Regions         - 1\n")),(0,r.yg)("p",null,"That's it. You've finished installing Foundationdb server. Now you have the ",(0,r.yg)("inlineCode",{parentName:"p"},"fdb.cluster")," file. We will use it in Byconity's configuration."))}p.isMDXComponent=!0}}]);