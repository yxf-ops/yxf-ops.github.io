"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[5010],{8860:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var a=t(7953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(t),g=r,d=p["".concat(u,".").concat(g)]||p[g]||y[g]||i;return t?a.createElement(d,l(l({ref:n},c),{},{components:t})):a.createElement(d,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=g;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3296:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=t(5890),r=(t(7953),t(8860));const i={title:"Scaling",sidebar_position:3,tags:["Docs"]},l="Scaling",o={unversionedId:"admin-guides/scale-up-down",id:"admin-guides/scale-up-down",title:"Scaling",description:"ByConity supports containerized and modular deployment, allowing for elastic scaling. It can scale computing resources in real-time and on-demand, ensuring efficient resource utilization. This section describes how to scale ByConity on a Kubernetes cluster.",source:"@site/docs/admin-guides/scale-up-down.mdx",sourceDirName:"admin-guides",slug:"/admin-guides/scale-up-down",permalink:"/docs/admin-guides/scale-up-down",draft:!1,editUrl:"https://github.com/yxf-ops/yxf-ops.github.io/tree/main/docs/admin-guides/scale-up-down.mdx",tags:[{label:"Docs",permalink:"/docs/tags/docs"}],version:"current",sidebarPosition:3,frontMatter:{title:"Scaling",sidebar_position:3,tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"Virtual Warehouse Configuration",permalink:"/docs/admin-guides/virtual-warehouse-configuration"},next:{title:"High Availability",permalink:"/docs/admin-guides/high-availability"}},u={},s=[{value:"Scaling Through Configuration Files",id:"scaling-through-configuration-files",level:2},{value:"Scaling Through kubectl",id:"scaling-through-kubectl",level:2}],c={toc:s},p="wrapper";function y(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"scaling"},"Scaling"),(0,r.yg)("p",null,"ByConity supports containerized and modular deployment, allowing for elastic scaling. It can scale computing resources in real-time and on-demand, ensuring efficient resource utilization. This section describes how to scale ByConity on a Kubernetes cluster."),(0,r.yg)("h2",{id:"scaling-through-configuration-files"},"Scaling Through Configuration Files"),(0,r.yg)("p",null,"Suppose you want to add two compute groups: one with five replicas for ",(0,r.yg)("inlineCode",{parentName:"p"},"my-new-vw-default")," reads and another with two replicas for ",(0,r.yg)("inlineCode",{parentName:"p"},"my-new-vw-write")," writes."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Modify the ",(0,r.yg)("inlineCode",{parentName:"li"},"values.yaml")," file:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"byconity:\n  virtualWarehouses:\n    ...\n    - <<: *defaultWorker\n      name: my-new-vw-default\n      replicas: 5\n    - <<: *defaultWorker\n      name: my-new-vw-write\n      replicas: 2\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Update the ByConity cluster using Helm:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"helm upgrade --install --create-namespace --namespace byconity -f ./your/custom/values.yaml byconity ./chart/byconity\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Run the CREATE WAREHOUSE DDL statements in Byconity to create logical virtual warehouses:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE WAREHOUSE IF NOT EXISTS `my-new-vw-default` SETTINGS num_workers = 0, type = 'Read';\nCREATE WAREHOUSE IF NOT EXISTS `my-new-vw-write` SETTINGS num_workers = 0, type = 'Write';\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Create a table and use the new virtual warehouses:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"-- Create a table with SETTINGS cnch_vw_default = 'my-new-vw-default', cnch_vw_write = 'my-new-vw-write'\nCREATE DATABASE IF NOT EXISTS test;\nCREATE TABLE test.lc2 (b LowCardinality(String)) ENGINE=CnchMergeTree\nORDER BY b\nSETTINGS cnch_vw_default = 'my-new-vw-default', cnch_vw_write = 'my-new-vw-write';\n\n-- Check if the table has the new settings\nSHOW CREATE TABLE test.lc2;\n")),(0,r.yg)("h2",{id:"scaling-through-kubectl"},"Scaling Through kubectl"),(0,r.yg)("p",null,"Suppose you have a ",(0,r.yg)("inlineCode",{parentName:"p"},"my-new-vw-default")," virtual warehouse and you want to scale it up by adding two more workers. You can directly update the Kubernetes StatefulSet resource:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"First, use the following command to get the names of all StatefulSet resources in the current Kubernetes cluster:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl get statefulset\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Then, find and edit the configuration for ",(0,r.yg)("inlineCode",{parentName:"li"},"my-new-vw-default")," using:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl edit statefulset.apps/my-new-vw-default\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Change the ",(0,r.yg)("inlineCode",{parentName:"li"},"replicas")," value from ",(0,r.yg)("inlineCode",{parentName:"li"},"1")," to ",(0,r.yg)("inlineCode",{parentName:"li"},"2"),":")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  podManagementPolicy: OrderedReady\n  replicas: 2 # Changed from 1 to 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app.kubernetes.io/instance: byconity\n      app.kubernetes.io/name: byconity\n      byconity-role: worker\n      byconity-vw: vw_default\n  serviceName: my-new-vw-default\n")),(0,r.yg)("p",null,"After updating, you can use ",(0,r.yg)("inlineCode",{parentName:"p"},"kubectl")," to verify that the virtual warehouse has been scaled to include two workers."))}y.isMDXComponent=!0}}]);